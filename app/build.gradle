plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.deanu.githubuser'
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.deanu.githubuser"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.deanu.githubuser.common.data.utils.HiltTestRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        viewBinding = true
    }
}
dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:3.3.0"
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    implementation 'androidx.navigation:navigation-testing:2.5.3'

    // Hilt Test
    debugImplementation "androidx.fragment:fragment-testing:1.5.0-rc01"
    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    androidTestImplementation "com.google.truth:truth:1.1.3"
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.44'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.44'
    kaptTest 'com.google.dagger:hilt-compiler:2.44'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycle_version"
    implementation "androidx.activity:activity-ktx:$activityKtx_version"

    // Network & GSON
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:converter-gson:$gsonConverter_version"

    // DI
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
//    kapt "androidx.hilt:hilt-compiler:$androidx_hilt_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Network Response Adapter
    implementation "com.github.haroldadmin:NetworkResponseAdapter:$networkAdapter_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockitoCore_version"
    testImplementation "org.mockito:mockito-inline:$mockitoCore_version"

    // Special Testing
    // InstantTaskExecutorRule
    testImplementation "androidx.arch.core:core-testing:$coreTesting_version"
    // TestCoroutineDispatcher
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTest_version"

    // Robolectric
    testImplementation "org.robolectric:robolectric:$robolectric_version"
}

kapt {
    correctErrorTypes true
}